name: Full CI Pipeline

on:
  push:
    branches: ['**']
  pull_request:

jobs:
  setup:
    name: Setup & Install
    runs-on: ubuntu-latest
    outputs:
      cache_key: modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.x'
          cache: 'npm'

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.npm
          key: modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

  lint:
    name: Lint codebase
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.x'
          
      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ needs.setup.outputs.cache_key }}
          
      - name: Lint codebase
        run: npm run lint

  typecheck:
    name: TypeScript checks
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.x'
          
      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ needs.setup.outputs.cache_key }}
          
      - name: Type check
        run: npm run typecheck

  test:
    name: Run tests + coverage
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.x'
          
      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ needs.setup.outputs.cache_key }}
          
      - name: Run tests
        run: npm run test:ci
        
      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/

  build:
    name: Build projects
    runs-on: ubuntu-latest
    needs: [setup, lint, typecheck, test]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.x'
          
      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ needs.setup.outputs.cache_key }}
          
      - name: Build project
        run: npm run build

  security:
    name: Security scan
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.x'
          
      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ needs.setup.outputs.cache_key }}
          
      - name: CodeQL Initialize
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          
      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v2